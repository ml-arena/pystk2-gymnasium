name: Build Wheels

on:
  push:
    branches: [main, master]
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-wheels:
    name: Build wheels for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      DEBIAN_FRONTEND: noninteractive
      NEEDRESTART_MODE: a
      # Use all available CPU cores for faster compilation
      CMAKE_BUILD_PARALLEL_LEVEL: 4
    strategy:
      matrix:
        python-version: ['3.10']  # Build for one version first to test
      fail-fast: false

    steps:
      - name: Checkout pystk2-gymnasium
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies for PySuperTuxKart2
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            cmake \
            ninja-build \
            ccache \
            g++ \
            gcc \
            build-essential \
            libsdl2-dev \
            libsdl2-2.0-0 \
            pkg-config \
            zlib1g-dev \
            libpng-dev \
            libjpeg-dev \
            libfreetype6-dev \
            libharfbuzz-dev \
            libcurl4-openssl-dev

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.python-version }}
          max-size: 2G

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip
          pip install build wheel twine scikit-build-core pybind11 ninja

      - name: Verify SDL2 installation
        run: |
          pkg-config --modversion sdl2 || echo "SDL2 not found via pkg-config"
          ldconfig -p | grep libSDL2 || echo "libSDL2 not found in ldconfig"
          find /usr -name "SDL2Config.cmake" 2>/dev/null || echo "SDL2Config.cmake not found"

      - name: Set CMake environment for SDL2 and ccache
        run: |
          echo "CMAKE_PREFIX_PATH=/usr:$CMAKE_PREFIX_PATH" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV
          echo "CMAKE_C_COMPILER_LAUNCHER=ccache" >> $GITHUB_ENV
          echo "CMAKE_CXX_COMPILER_LAUNCHER=ccache" >> $GITHUB_ENV
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV

      - name: Build unified pystk2-gymnasium wheel (includes PySuperTuxKart2)
        run: |
          python -m build --wheel
          echo "=== pystk2-gymnasium wheel built (with bundled pystk2) ==="
          ls -lh dist/

      - name: Test unified wheel installation
        run: |
          pip install dist/*.whl
          python -c "import pystk2; print('PySuperTuxKart2 imported successfully')"
          python -c "import pystk2_gymnasium; print(f'pystk2-gymnasium version: {pystk2_gymnasium.__version__}')"
          python -c "import pystk2; import pystk2_gymnasium; print('Both modules work correctly!')"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-py${{ matrix.python-version }}-linux-amd64
          path: dist/*.whl
          retention-days: 90

      - name: Create release and upload wheels
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
